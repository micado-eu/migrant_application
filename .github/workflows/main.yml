# This is a basic workflow to help you get started with Actions

name: CI to Docker Hub

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: micadoproject/migrant_app_site:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


        name: Create and publish a Docker image on GitHub

        # Configures this workflow to run every time a change is pushed to the branch called `release`.
        on:
          push:
            branches: 
              - 'master'
              - '2024'
            tags:
              - 'v*'
        # Defines two custom environment variables for the workflow. These are used for the Container registry domain, and a name for the Docker image that this workflow builds.
        env:
          REGISTRY: ghcr.io
          IMAGE_NAME: ${{ github.repository }}
        
        # There is a single job in this workflow. It's configured to run on the latest available version of Ubuntu.
        jobs:
          build-and-push-image:
            runs-on: ubuntu-latest
            # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
            permissions:
              contents: read
              packages: write
              # 
            steps:
              - name: Checkout repository
                uses: actions/checkout@v4
              # Uses the `docker/login-action` action to log in to the Container registry registry using the account and password that will publish the packages. Once published, the packages are scoped to the account defined here.
              - name: Log in to the Container registry
                uses: docker/login-action@v3
                with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}
              # This step uses [docker/metadata-action](https://github.com/docker/metadata-action#about) to extract tags and labels that will be applied to the specified image. The `id` "meta" allows the output of this step to be referenced in a subsequent step. The `images` value provides the base name for the tags and labels.
              - name: Extract metadata (tags, labels) for Docker
                id: meta
                uses: docker/metadata-action@v5
                with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
              # This step uses the `docker/build-push-action` action to build the image, based on your repository's `Dockerfile`. If the build succeeds, it pushes the image to GitHub Packages.
              # It uses the `context` parameter to define the build's context as the set of files located in the specified path. For more information, see "[Usage](https://github.com/docker/build-push-action#usage)" in the README of the `docker/build-push-action` repository.
              # It uses the `tags` and `labels` parameters to tag and label the image with the output from the "meta" step.
              - name: Build and push Docker image
                uses: docker/build-push-action@v5
                with:
                  context: ./
                  file: ./Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
        
              - name: Image digest
                run: echo ${{ steps.docker_build.outputs.digest }}
          
